# This is file is automatically generated. Do not edit.
name: 'ants'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ["test_docker_build"]

jobs:

  ants:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        base_image: ['ubuntu:22.04', 'ubuntu:18.04', 'debian:bullseye-slim', 'debian:buster-slim', 'fedora:36', 'centos:7']
        version: ['2.4.3', '2.4.2', '2.4.1', '2.3.4', '2.3.2', '2.3.1', '2.3.0', '2.2.0', '2.1.0', '2.0.3', '2.0.0']
        method: ['binaries', 'source']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install neurodocker
        run: python -m pip install --editable .[dev]

      - name: Generate Dockerfile
        run: |

          apt_based=('ubuntu:22.04', 'ubuntu:18.04', 'debian:bullseye-slim', 'debian:buster-slim')
          if [[ " ${apt_based[*]} " =~ ${{ matrix.base_image }} ]]; then
            pkg_manager="apt"
          fi

          yum_based=('fedora:36', 'centos:7')
          if [[ " ${yum_based[*]} " =~ ${{ matrix.base_image }} ]]; then
            pkg_manager="yum"
          fi

          neurodocker \
            generate docker \
            --base-image=${{ matrix.base_image }} \
            --pkg-manager=${pkg_manager} \
            --yes \
            --ants \
            version=${{ matrix.version }} \
            method=${{ matrix.method }} \
            > Dockerfile_tmp

          cat Dockerfile_tmp

      - name: Build the Docker image
        run: docker build -f Dockerfile_tmp .
